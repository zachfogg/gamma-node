/* ==|== Color palletes and classes =========================== */
@import 'colors.less';
// Classes to color visible elements.
.bg-color-body       { background-color: black; }
.bg-color-glass      { background-color: fade(@color_glass,      75%); }
.bg-color-pink       { background-color: fade(@color_pink,       75%); }
.bg-color-tan        { background-color: fade(@color_tan,        75%); }
.bg-color-navy       { background-color: fade(@color_navy,       75%); }
.bg-color-teal       { background-color: fade(@color_teal,       75%); }
.bg-color-gold       { background-color: fade(@color_gold,       75%); }
.bg-color-grapefruit { background-color: fade(@color_grapefruit, 75%); }
.bg-color-mint       { background-color: fade(@color_mint,       75%); }
.bg-color-frost      { background-color: fade(@color_frost,      40%); }

/* ==|== HelpLess - LESS Helpers Library (http://m6tt.github.com/HelpLess) = */
@import 'libs/helpless.0.0.3.less';
#hl.reset();

/* ==|== Elements LESS library =========================== */
@import 'libs/elements.less';

/* ==|== HTML5 âœ° Boilerplate LESS library =========================== */
@import 'libs/boilerplate.less';
@selectBackgroundColor: darken(    @color_navy,       20%);
@selectTextColor:                  @color_frost;
@aColor:                lighten(   @color_teal,       15%);
@aVisitedColor:         desaturate(@aColor,           30%);
@aHoverColor:           spin(      @aColor,           20);
#blr.normalize(@selectBackgroundColor, @selectTextColor, @aColor, @aVisitedColor, @aHoverColor);

/* ==|== Primary Structure ==================================================
   Author: Z. Fogg
   ========================================================================== */

// Assorted variables.
@header_size: 120px;
@grid_margin: 10px;
@navWidth: 540px;
@navHeight: 120px;

// Convenience classes and mixins.
@import 'helpers.less';
.unselectable {
  -moz-user-select: -moz-none;
  -khtml-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
}


html {
  min-height: 100%;

  body {
    min-height: 100%;
    padding-bottom: 3*@grid_margin;
    #hl.transition(background-color, .8s, ease-out);
    .bg-radial-gradient(
      ~"url('/images/bg.png')",
      ~"50% 45%, rgba(235, 235, 235, 0.5), rgba(149, 149, 149, 0.6) 30%,rgba(96, 96, 96, 0.7) 54%, rgba(20,20,20,0.9) 120%");

    @import "typo.less";

    #header { @import 'header.less'; }

    #main {
      padding-bottom: 2*@grid_margin;
      .vexpand();
      .border-radius(4px, 0, 0, 4px);
      .box-shadow(~"-2px 2px 5px #555, 2px 1px 5px #555, inset 2px 0 8px #222, inset -2px -3px 8px #222");
      #hl.background-gradient(fade(lighten(@color_dark-gray, 10%), 5%),
                              fade(darken( @color_dark-gray, 15%), 60%),
                              fade(        @color_dark-gray,       15%));

      #content-wrapper {
        &.grid_7 #content {
          padding: @grid_margin 0 @grid_margin 2*@grid_margin;
        }

        #content { @import 'content.less'; }

      } // #content-wrapper
    } // #main

    #footer { @import 'footer.less'; }

  } // body
} // html


/* ==|== media queries ====================================================== */
/* Screen width <= 320px */
@media only screen and (max-width: 320px) {

}

/* Screen width > 320px */
@media only screen and (min-width: 321px) and (max-width: 480px) {

}

/* Screen width > 480px */
@media only screen and (max-width: 768px) {

}

/* Screen width > 768px */
@media only screen and (min-width: 769px) {

}

/* Screen width > 1024px */
@media only screen and (min-width: 1023px) and (max-width: 1280px) {

}

/* Screen width > 1280px */
@media only screen and (min-width: 1281px) {

}

/* ==|== endos ==============================================================
   Please define your styles before this section.
   ========================================================================== */
#blr.ns-helpers();
@media print { #blr.media-print(); }
