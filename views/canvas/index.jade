extends ../layout/index


append css
  :stylus
    #gjs-canvas
      position absolute !important

    .row
      height 1%
      overflow hidden


append js
  != js("libs/yabble.js")
  :coffeescript
    require.run "canvas/index"


block content
  #content-wrapper
    #content

      #gjs-loader
        Loading...
      canvas#gjs-canvas

      mixin canvasAppTitle(title, subtitle)
        h3.b2_staticBody=title
        h4.b2_staticBody=subtitle

      mixin canvasAppLinks(links)
        for link in links
          p
            a.b2_staticBody(href=link[0])=link[1]

      mixin emptyBlock()
        .empty_block.grid_6
          .content-halfBlock

      .row
        .canvas_app.grid_6
          .content-halfBlock
            mixin canvasAppTitle("Gravity", "in a 2D universe.")
            p.b2_staticBody In my physics studies, while learning about gravity, I was inspired to implement the formula in a visual way. At the time, I was only capable of working with two dimensions, but I plan to use WebGL to rework this into a 3D simulation, probably utilizing Three.js.
            mixin canvasAppLinks([["/canvas/gravity","Run"],["https://github.com/zachfogg/gamma-node/tree/master/static/js/canvas/gravity","View Source"]])
        mixin emptyBlock()

      .row
        mixin emptyBlock()
        .canvas_app.grid_6
          .content-halfBlock
            mixin canvasAppTitle("Squares", "Natural Motion")
            p.b2_staticBody The very first canvas app I wrote; where it all started. This code is kind of sentimental to me, because I discovered and understood function closures for the first time while writing it. For me, this is when writing JavaScript started to 'click'.
            mixin canvasAppLinks([["/canvas/squares","Run"],["https://github.com/zachfogg/gamma-node/blob/master/static/js/canvas/squares/index.coffee","View Source"]])

      .row
        .canvas_app.grid_6
          .content-halfBlock
            mixin canvasAppTitle("Grid", "Zoom and Perspective")
            p.b2_staticBody Trying to emulate the effect of a camera's zoom functionality, this is the second canvas app I wrote. Although an unnsuccessful attempt at creating the desired zoom effect, I still find this to be a fascinating visual, and the math behind it is interesting as well.
            mixin canvasAppLinks([["/canvas/grid","Run"],["https://github.com/zachfogg/gamma-node/blob/master/static/js/canvas/squares/grid.js","View Source"]])
        mixin emptyBlock()
